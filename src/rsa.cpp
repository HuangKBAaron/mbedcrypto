#include "mbedcrypto/rsa.hpp"
#include "pk_private.hpp"

namespace mbedcrypto {
namespace {
///////////////////////////////////////////////////////////////////////////////
static_assert(std::is_copy_constructible<rsa>::value == false, "");
static_assert(std::is_move_constructible<rsa>::value == true,  "");
///////////////////////////////////////////////////////////////////////////////
} // namespace anon
///////////////////////////////////////////////////////////////////////////////
struct rsa::impl : public pk::context
{
}; // rsa::impl

///////////////////////////////////////////////////////////////////////////////
rsa::rsa() : pimpl(std::make_unique<impl>()) {
    pk::reset_as(*pimpl, pk_t::rsa);
}

rsa::~rsa() {
}

pk::context&
rsa::context() {
    return *pimpl;
}

const pk::context&
rsa::context() const {
    return *pimpl;
}

///////////////////////////////////////////////////////////////////////////////
} // namespace mbedcrypto
///////////////////////////////////////////////////////////////////////////////
